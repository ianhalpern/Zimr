x*setup autostart/stop/etc. (init.d)
x*make install build routine
x*setup autostart
x*folder view
x*redirect if folders don't have trailing /
x*website redirects
x*fix bug: applications do not reattach to proxy when proxy restarts
x*fix bug: "sudo /etc/init.d/zimr-proxy start" kills already running daemon
x*fix bug: problems when pid in .zimr.state file equals zero
x*revamp and finish all zimr command line options
x*update lists to use simclist data structure
x*ignore files
x*update python-zimr bindings error checking and methods/member/etc. descriptions
x*update msg_switch.h not to die on partial write, but to try and write again
x*setup launchpad
x*update website
x*choose unused port for local default proxy port
x*make page handler regular and python folder
x*change zimr-application to zimr-app
x*makefile without vernum

^ Milestone v0.1.0 ^

*add multiple architecure compilation to makefile (x86,x86-64)
*thorough testing (use socat for request testing, check for memleaks with valgrind)
*make ubuntu package
*look through and update syslog/stdio logging
*fix bug: "sudo /etc/init.d/zimr start" doesn't run cleany in some cases
*error files/website handling
*add a "init" function
*bug: connections sometimes fail on read and get "connection reset by peers"
*add support for http headers that are just \n and not \r\n
*website parking
*website modules (python,psp)
*ignored extensions
*bug: applications started with zimr command do not clean up state file on exit
*make zimr info commands return yaml
*ability to change cwd of zimr proc
*add logging by website and configurable via zimr.cnf file
*SSL for external encryption, SSH for internal encryption
*multipart/form-data support and attachments http://community.roxen.com/developers/idocs/rfc/rfc1867.html
*make proxy config file
*comb through rfc specs and add missing features, or features that need to be updated to conform to it to the TODO list
*write man page/documentation
*remove asserts
*permissions/credentials
*default configuration for applications/websites in state
*wikipedia page
*make proxy kill website connections when website dies
*make a HTTP/GTK gui
*support for OS X (and maybe...maybe Windows)
*wildcard url's
*make a pass/fail bug test script
*make python embedded version
*add support for UPnP to open ports in router
